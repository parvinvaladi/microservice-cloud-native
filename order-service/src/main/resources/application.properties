spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=3720519635
spring.jpa.hibernate.ddl-auto=update

server.port=8082
eureka.client.serviceUrl.defaultZone = http://eureka:password@localhost:8761/eureka
spring.application.name=order-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

##resilience4j properties
#resilience4j.circuitbreaker.instances.innentory.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.innentory.event-consumer-buffer-size=10
#resilience4j.circuitbreaker.instances.innentory.sliding-window-type=COUNT_BASED
#resilience4j.circuitbreaker.instances.innentory.sliding-window-size=5
#resilience4j.circuitbreaker.instances.innentory.failure-rate-threshold=50
#resilience4j.circuitbreaker.instances.innentory.wait-duration-in-open-state=5s
#resilience4j.circuitbreaker.instances.innentory.permitted-number-of-calls-in-half-open-state=3
#resilience4j.circuitbreaker.instances.innentory.automatic-transition-from-open-to-half-open-enabled=true
#resilience4j.timelimiter.instances.inventory.timeout-duration = 3s

#resilience4j retry properties
#resilience4j.retry.instances.inventory.max-attempts = 3
#resilience4j.retry.instances.inventory.wait-duration = 5s

#spring.sleuth.integration.enabled=true
#spring.zipkin.base-url=
#spring.sleuth.sampler.probability=1.0

# kafka properties
spring.kafka.bootstrap-servers= localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.group-id = notificationId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping = event:com.programming.orderservice.event.OrderPlacedEvent